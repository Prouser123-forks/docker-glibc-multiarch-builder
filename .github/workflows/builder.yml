name: builder

on:
  push:
    branches: jcx/master

jobs:
  builder:
    runs-on: ubuntu-latest
    env:
      GLIBC_VERSION: 2.31
      REVISION: 0
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      - 
        name: Create builder image, artifact folder
        run: mkdir -p artifacts && docker build -t glibc-builder .
      -
        name: Build glibc (x86_64-linux)
        run: docker run --rm --env STDOUT=1 glibc-builder $GLIBC_VERSION /usr/glibc-compat x86_64-linux > artifacts/x86_64.tar.gz
      -
        name: Build glibc (aarch64-linux-gnu)
        run: docker run --rm --env STDOUT=1 glibc-builder 2.31 /usr/glibc-compat aarch64-linux-gnu > artifacts/aarch64.tar.gz
      -
        name: Build glibc (arm-linux-gnueabi)
        run: docker run --rm --env STDOUT=1 glibc-builder 2.31 /usr/glibc-compat arm-linux-gnueabi > artifacts/arm.tar.gz
      -
        name: Build glibc (arm-linux-gnueabihf)
        run: docker run --rm --env STDOUT=1 glibc-builder 2.31 /usr/glibc-compat arm-linux-gnueabihf > artifacts/armhf.tar.gz
      # -------------------------
      # Release creation, artifact uploading...
      # -------------------------
      -
        name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "jcx-${{env.GLIBC_VERSION}}-r${{env.REVISION}}"
          release_name: "jcx-${{env.GLIBC_VERSION}}-r${{env.REVISION}}"
          body: "glibc ${{env.GLIBC_VERSION}}"
          draft: false
          prerelease: false
      # Artifact Upload #1 - x86_64
      -
        name: Upload Artifact - x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/x86_64.tar.gz
          asset_name: "glibc-bin-${{env.GLIBC_VERSION}}-r${{env.REVISION}}-x86_64.tar.gz"
          asset_content_type: application/gzip
      # Artifact Upload #2 - aarch64
      -
        name: Upload Artifact - aarch64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/aarch64.tar.gz
          asset_name: "glibc-bin-${{env.GLIBC_VERSION}}-r${{env.REVISION}}-aarch64.tar.gz"
          asset_content_type: application/gzip
      # Artifact Upload #3 - arm
      -
        name: Upload Artifact - arm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/arm.tar.gz
          asset_name: "glibc-bin-${{env.GLIBC_VERSION}}-r${{env.REVISION}}-arm.tar.gz"
          asset_content_type: application/gzip
      # Artifact Upload #4 - armhf
      -
        name: Upload Artifact - armhf
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/armhf.tar.gz
          asset_name: "glibc-bin-${{env.GLIBC_VERSION}}-r${{env.REVISION}}-armhf.tar.gz"
          asset_content_type: application/gzip